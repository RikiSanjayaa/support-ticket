services:
  web:
    image: nginx:latest
    volumes:
      - ./:/var/www
      - ./docker/development/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"  # HTTPS
    environment:
      - NGINX_HOST=example.com  # Change to your domain
    networks:
      - laravel-production
    depends_on:
      php-fpm:
        condition: service_started
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  php-fpm:
    build:
      context: .
      dockerfile: ./docker/common/php-fpm/Dockerfile
      target: production  # Use production target
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    env_file:
      - .env
    volumes:
      - ./:/var/www
    networks:
      - laravel-production
    depends_on:
      postgres:
        condition: service_started
    restart: always
    healthcheck:
      test: ["CMD", "php-fpm-healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:16
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-data-production:/var/lib/postgresql/data
    networks:
      - laravel-production
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - laravel-production
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

networks:
  laravel-production:

volumes:
  postgres-data-production:
